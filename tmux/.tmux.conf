# -- general
#set-option default-path "$PWD"  # 设置默认路径为当前工作目录

setw -g xterm-keys on  # 启用xterm键支持
set -s escape-time 0  # 设置转义时间为0
set -sg repeat-time 300  # 设置重复时间为300毫秒
set -sg focus-events on  # 启用焦点事件
set -g mouse on  # 启用鼠标支持
set -sg exit-empty on  # 当没有会话时退出

set -q -g status-utf8 on  # 启用UTF-8状态支持
setw -q -g utf8 on  # 启用UTF-8支持

set -g visual-activity off  # 关闭视觉活动提示
setw -g monitor-activity off  # 关闭活动监控
setw -g monitor-bell off  # 关闭铃声监控

set -g history-limit 10000  # 设置历史记录限制为10000行


# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'  # 绑定r键以重新加载配置文件


# -- prefix
unbind C-b  # 解除默认的C-b前缀绑定
set -g prefix 'C-s'  # 设置新的前缀为C-s

# -- display
set -g base-index 1  # 设置窗口基索引为1
setw -g pane-base-index 1  # 设置面板基索引为1

setw -g automatic-rename on  # 启用自动重命名窗口
set -g renumber-windows on  # 启用窗口重新编号

set -g set-titles on  # 启用设置标题

set -g display-panes-time 2000  # 设置面板显示时间为2000毫秒
set -g display-time 2000  # 设置显示时间为2000毫秒

set -g status-interval 1  # 设置状态更新间隔为1秒

# -- navigation

# create session
bind C-c new-session  # 绑定C-c键以创建新会话

# window management
bind -n M-o new-window -c "#{pane_current_path}"  # 绑定ALT-o键以在当前路径创建新窗口
bind -n M-O break-pane  # 绑定ALT-O键以分离面板
bind -n M-Q kill-pane  # 绑定ALT-Q键以关闭面板

# window navigation
unbind n  # 解除n键绑定
unbind p  # 解除p键绑定
unbind 1  # 解除1键绑定
unbind 2  # 解除2键绑定
unbind 3  # 解除3键绑定
unbind 4  # 解除4键绑定
unbind 5  # 解除5键绑定
unbind 6  # 解除6键绑定
unbind 7  # 解除7键绑定
unbind 8  # 解除8键绑定
unbind 9  # 解除9键绑定
unbind 0  # 解除0键绑定
bind -r -n M-p previous-window  # 绑定ALT-p键以切换到上一个窗口, 表示可以之一按住
bind -r -n M-n next-window  # 绑定ALTn键以切换到下一个窗口

bind -n M-1 select-window -t 1  # 绑定ALT-1键以选择窗口1
bind -n M-2 select-window -t 2  # 绑定ALT-2键以选择窗口2
bind -n M-3 select-window -t 3  # 绑定ALT-3键以选择窗口3
bind -n M-4 select-window -t 4  # 绑定ALT-4键以选择窗口4
bind -n M-5 select-window -t 5  # 绑定ALT-5键以选择窗口5
bind -n M-6 select-window -t 6  # 绑定ALT-6键以选择窗口6
bind -n M-7 select-window -t 7  # 绑定ALT-7键以选择窗口7
bind -n M-8 select-window -t 8  # 绑定ALT-8键以选择窗口8
bind -n M-9 select-window -t 9  # 绑定ALT-9键以选择窗口9

bind -n M-! join-pane -t :1  # 绑定ALT-!键以加入面板到窗口1
bind -n M-@ join-pane -t :2  # 绑定ALT-@键以加入面板到窗口2
bind -n 'M-#' join-pane -t :3  # 绑定ALT-#键以加入面板到窗口3
bind -n 'M-$' join-pane -t :4  # 绑定ALT-$键以加入面板到窗口4
bind -n M-% join-pane -t :5  # 绑定ALT-%键以加入面板到窗口5
bind -n M-^ join-pane -t :6  # 绑定ALT-^键以加入面板到窗口6
bind -n M-& join-pane -t :7  # 绑定ALT-&键以加入面板到窗口7
bind -n M-* join-pane -t :8  # 绑定ALT-*键以加入面板到窗口8
bind -n M-( join-pane -t :9  # 绑定ALT-(键以加入面板到窗口9

bind k split-window -vb -c "#{pane_current_path}"  # 绑定k键以在当前路径垂直向下分割窗口
bind j split-window -v -c "#{pane_current_path}"  # 绑定j键以在当前路径垂直分割窗口
bind h split-window -hb -c "#{pane_current_path}"  # 绑定h键以在当前路径水平向左分割窗口
bind l split-window -h -c "#{pane_current_path}"  # 绑定l键以在当前路径水平分割窗口

bind -n M-f resize-pane -Z  # 绑定ALT-f键以切换面板大小

# pane navigation
bind 1 select-pane -t:.1  # 绑定1键以选择面板1
bind 2 select-pane -t:.2  # 绑定2键以选择面板2
bind 3 select-pane -t:.3  # 绑定3键以选择面板3
bind 4 select-pane -t:.4  # 绑定4键以选择面板4
bind 5 select-pane -t:.5  # 绑定5键以选择面板5
bind 6 select-pane -t:.6  # 绑定6键以选择面板6
bind 7 select-pane -t:.7  # 绑定7键以选择面板7
bind 8 select-pane -t:.8  # 绑定8键以选择面板8
bind 9 select-pane -t:.9  # 绑定9键以选择面板9
bind 0 select-pane -t:.10  # 绑定0键以选择面板10
bind -n M-h select-pane -L  # 绑定ALT-h键以选择左侧面板
bind -n M-j select-pane -D  # 绑定ALT-j键以选择下方面板
bind -n M-k select-pane -U  # 绑定ALT-k键以选择上方面板
bind -n M-l select-pane -R  # 绑定ALT-l键以选择右侧面板
bind > swap-pane -D  # 绑定>键以向下交换面板
bind < swap-pane -U  # 绑定<键以向上交换面板
bind | swap-pane  # 绑定|键以交换面板
bind -n M-/ next-layout  # 绑定ALT-/键以切换到下一个布局

bind W choose-tree -Z  # 绑定W键以选择树形结构
bind S choose-tree 'move-pane -v -s "%%"'  # 绑定S键以垂直移动面板
bind V choose-tree 'move-pane -h -s "%%"'  # 绑定V键以水平移动面板

# pane resizing
bind -n M-H resize-pane -L 3  # 绑定ALT-H键以向左调整面板大小
bind -n M-J resize-pane -D 3  # 绑定ALT-J键以向下调整面板大小
bind -n M-K resize-pane -U 3  # 绑定ALT-K键以向上调整面板大小
bind -n M-L resize-pane -R 3  # 绑定ALT-L键以向右调整面板大小

set -g status-keys vi  # 设置状态键为vi模式
set -g mode-keys vi  # 设置模式键为vi模式

bind -n M-v copy-mode  # 绑定ALT-v键以进入复制模式

bind -T copy-mode-vi v send-keys -X begin-selection  # 绑定v键以开始选择
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle  # 绑定C-v键以切换矩形选择
bind -T copy-mode-vi h send-keys -X cursor-left  # 绑定h键以向左移动光标
bind -T copy-mode-vi l send-keys -X cursor-right  # 绑定l键以向右移动光标
bind -T copy-mode-vi k send-keys -X cursor-up  # 绑定k键以向上移动光标
bind -T copy-mode-vi j send-keys -X cursor-down  # 绑定j键以向下移动光标
bind -T copy-mode-vi e send-keys -X next-word-end  # 绑定e键以移动到下一个单词结尾
bind -T copy-mode-vi J send-keys -N 5 -X cursor-up  # 绑定J键以向上移动5行
bind -T copy-mode-vi K send-keys -N 5 -X cursor-down  # 绑定K键以向下移动5行
bind -T copy-mode-vi H send-keys -X start-of-line  # 绑定H键以移动到行首
bind -T copy-mode-vi I send-keys -X end-of-line  # 绑定I键以移动到行尾
bind -T copy-mode-vi Y send-keys -X copy-end-of-line  # 绑定Y键以复制到行尾
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel  # 绑定y键以复制选择并取消
bind -T copy-mode-vi = send-keys -X search-again  # 绑定=键以再次搜索
bind -T copy-mode-vi = send-keys -X search-reverse  # 绑定=键以反向搜索

bind b list-buffers  # 绑定b键以列出缓冲区
bind p paste-buffer  # 绑定p键以粘贴缓冲区

# -- toggle_syn_input
bind C-g if-shell '[[ $(tmux showw synchronize-panes | cut -d\  -f2) == "on" ]]' \
'setw synchronize-panes off; set -g pane-border-style fg=magenta' \
'setw synchronize-panes on; set -g pane-border-style fg=red'  # 绑定C-g键以切换同步输入

# -- toggle_status
bind s if-shell '[[ $(tmux show -g status | cut -d\  -f2) == "on" ]]' \
'set -g status off' \
'set -g status on'  # 绑定s键以切换状态栏

# -- theme
#set -g status off  # 关闭状态栏

# panes
#setw -g pane-border-status bottom  # 设置面板边框状态为底部
setw -g pane-border-format '#[bold]#{?#{&&:#{pane_active},#{client_prefix}},#[underscore],}\#{?pane_active,❐ #S:#I/#{session_windows} ,}#{?window_zoomed_flag,⬢,❄} #P ⇒ #{pane_tty} #{pane_current_command}'  # 设置面板边框格式
#set -g pane-active-border-style fg=brightblue  # 设置活动面板边框样式
#set -g pane-border-style fg=magenta  # 设置面板边框样式

# windows
set -g status-justify 'centre'  # 设置状态栏对齐为居中
set -g status-left-length 90  # 设置状态栏左侧长度
set -g status-right-length 140  # 设置状态栏右侧长度
setw -g window-status-separator ''  # 设置窗口状态分隔符

# default statusbar colors
set -g status-bg black  # 设置状态栏背景色为黑色
#set -g status-left ' #[fg=magenta,bold]❐ #S'  # 设置状态栏左侧内容
#set -g status-left '#[fg=brightyellow] #{?client_prefix,⌨ ,  }  #[fg=magenta,bold] %Y-%m-%d %H:%M '  # 设置状态栏左侧内容
#set -g status-right '#(rainbarf --battery --remaining --bolt --tmux --rgb)'  # 设置状态栏右侧内容
#set -g status-left "#[fg=magenta,bold] %Y-%m-%d %H:%M | #[fg=brightblue]#(curl icanhazip.com) #(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "  # 设置状态栏左侧内容
setw -g window-status-format '#[fg=brightblue] #I #W '  # 设置窗口状态格式
setw -g window-status-current-format '#[fg=magenta,bold] #I #W:#F'  # 设置当前窗口状态格式
setw -g window-status-activity-style bg=black  # 设置窗口活动状态样式
setw -g window-status-bell-style bg=black  # 设置窗口铃声状态样式
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"  # 设置当前窗口状态格式

# powerline这个配置我没装，所以注释掉了
#set-option -g status-left "#(~/.config/tmux/tmux-powerline/powerline.sh left)"  # 设置状态栏左侧内容
#set-option -g status-right "#(~/.config/tmux/tmux-powerline/powerline.sh right)"  # 设置状态栏右侧内容